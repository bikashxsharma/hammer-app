{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst getUsersData = () => {\n  const [users, setUsers] = useState(\"\");\n  const [isLoading, setisLoading] = useState(false);\n  useEffect(() => {\n    axios.get(\"https://cors-anywhere.herokuapp.com/https://us-central1-hammer-app.cloudfunctions.net/api/users\").then(response => {\n      setUsers(response.data);\n      setisLoading(true);\n      console.log(response.data);\n    }).catch(err => console.log(err));\n  }, []);\n};\n\nconsole.log(\"From reducer\" + users);\n\nconst getUsersReducer = (state = users, action) => {\n  return state;\n};\n\nexport default getUsersReducer;","map":{"version":3,"sources":["F:/Programming/hammer-app/src/reducers/getUsersReducer.js"],"names":["useState","useEffect","axios","getUsersData","users","setUsers","isLoading","setisLoading","get","then","response","data","console","log","catch","err","getUsersReducer","state","action"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CACFM,GADH,CAEI,iGAFJ,EAIGC,IAJH,CAISC,QAAD,IAAc;AAClBL,MAAAA,QAAQ,CAACK,QAAQ,CAACC,IAAV,CAAR;AACAJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACD,KARH,EASGG,KATH,CASUC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CATlB;AAUD,GAXQ,EAWN,EAXM,CAAT;AAYD,CAhBD;;AAkBAH,OAAO,CAACC,GAAR,CAAY,iBAAiBT,KAA7B;;AAEA,MAAMY,eAAe,GAAG,CAACC,KAAK,GAAGb,KAAT,EAAgBc,MAAhB,KAA2B;AACjD,SAAOD,KAAP;AACD,CAFD;;AAGA,eAAeD,eAAf","sourcesContent":["import {useState, useEffect} from \"react\"\r\nimport axios from \"axios\"\r\n\r\nconst getUsersData = () => {\r\n  const [users, setUsers] = useState(\"\")\r\n  const [isLoading, setisLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://cors-anywhere.herokuapp.com/https://us-central1-hammer-app.cloudfunctions.net/api/users\"\r\n      )\r\n      .then((response) => {\r\n        setUsers(response.data)\r\n        setisLoading(true)\r\n        console.log(response.data)\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }, [])\r\n}\r\n\r\nconsole.log(\"From reducer\" + users)\r\n\r\nconst getUsersReducer = (state = users, action) => {\r\n  return state\r\n}\r\nexport default getUsersReducer\r\n"]},"metadata":{},"sourceType":"module"}