{"ast":null,"code":"// import dummyData from '../questionPosts_db';\n// // checking if the localstorage has some value\n// const getInitialDataFromStorage = () => JSON.parse(\n//     window.localStorage.getItem('dummyPosts')\n// );\n// // store data to local storage only if local storage is empty\n// if (getInitialDataFromStorage() == null) {\n//     const setDataToStorage = (items) => window.localStorage.setItem('dummyPosts', JSON.stringify(items));\n//     setDataToStorage(dummyData);\n// }\n// // get data from storage\n// const getDataFromStorage = () => JSON.parse(\n//     window.localStorage.getItem('dummyPosts')\n// );\nconst initState = {\n  posts: [],\n  isLoaded: true\n};\n\nconst postsReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"NEWPOST\": //   let newPosts = [...state.posts]\n    //   const postObj = {\n    //     image: \"https://randomuser.me/api/portraits/women/72.jpg\",\n    //     userName: \"New user\",\n    //     postedTime: \"a few seconds ago\",\n    //     texts: action.payload,\n    //     hammerCount: \"0\",\n    //   }\n    //   newPosts.push(postObj)\n    //   window.localStorage.setItem(\"dummyPosts\", JSON.stringify(newPosts))\n    //   return (state = {\n    //     posts: getDataFromStorage(),\n    //   })\n\n    case \"INCREASEHAMMER\": //   let newPosts1 = [...state.posts]\n    //   newPosts1[action.payload].hammerCount = (\n    //     parseInt(newPosts1[action.payload].hammerCount, 10) + 1\n    //   ).toString()\n    //   window.localStorage.setItem(\"dummyPosts\", JSON.stringify(newPosts1))\n    //   return (state = {\n    //     posts: getDataFromStorage(),\n    //   })\n\n    default:\n      return state;\n  }\n};\n\nexport default postsReducer;","map":{"version":3,"sources":["F:/Programming/hammer-app/src/reducers/postsReducer.js"],"names":["initState","posts","isLoaded","postsReducer","state","action","type"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,EADS;AAEhBC,EAAAA,QAAQ,EAAE;AAFM,CAAlB;;AAKA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGJ,SAAT,EAAoBK,MAApB,KAA+B;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL,CADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAK,gBAAL,CAfF,CAgBE;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACE,aAAOF,KAAP;AA3BJ;AA6BD,CA9BD;;AAgCA,eAAeD,YAAf","sourcesContent":["// import dummyData from '../questionPosts_db';\r\n\r\n// // checking if the localstorage has some value\r\n// const getInitialDataFromStorage = () => JSON.parse(\r\n//     window.localStorage.getItem('dummyPosts')\r\n// );\r\n\r\n// // store data to local storage only if local storage is empty\r\n\r\n// if (getInitialDataFromStorage() == null) {\r\n//     const setDataToStorage = (items) => window.localStorage.setItem('dummyPosts', JSON.stringify(items));\r\n//     setDataToStorage(dummyData);\r\n// }\r\n\r\n// // get data from storage\r\n// const getDataFromStorage = () => JSON.parse(\r\n//     window.localStorage.getItem('dummyPosts')\r\n// );\r\n\r\nconst initState = {\r\n  posts: [],\r\n  isLoaded: true,\r\n}\r\n\r\nconst postsReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"NEWPOST\":\r\n    //   let newPosts = [...state.posts]\r\n    //   const postObj = {\r\n    //     image: \"https://randomuser.me/api/portraits/women/72.jpg\",\r\n    //     userName: \"New user\",\r\n    //     postedTime: \"a few seconds ago\",\r\n    //     texts: action.payload,\r\n    //     hammerCount: \"0\",\r\n    //   }\r\n    //   newPosts.push(postObj)\r\n    //   window.localStorage.setItem(\"dummyPosts\", JSON.stringify(newPosts))\r\n    //   return (state = {\r\n    //     posts: getDataFromStorage(),\r\n    //   })\r\n    case \"INCREASEHAMMER\":\r\n    //   let newPosts1 = [...state.posts]\r\n    //   newPosts1[action.payload].hammerCount = (\r\n    //     parseInt(newPosts1[action.payload].hammerCount, 10) + 1\r\n    //   ).toString()\r\n\r\n    //   window.localStorage.setItem(\"dummyPosts\", JSON.stringify(newPosts1))\r\n    //   return (state = {\r\n    //     posts: getDataFromStorage(),\r\n    //   })\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default postsReducer\r\n"]},"metadata":{},"sourceType":"module"}