{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst [users, setUsers] = useState(\"\");\nconst [isLoading, setisLoading] = useState(false);\nuseEffect(() => {\n  axios.get(\"https://cors-anywhere.herokuapp.com/https://us-central1-hammer-app.cloudfunctions.net/api/users\").then(response => {\n    setUsers(response.data);\n    setisLoading(true);\n    console.log(response.data);\n  }).catch(err => console.log(err));\n}, []);\nconsole.log(\"From reducer\" + users);\n\nconst getUsersReducer = (state = users, action) => {\n  return state;\n};\n\nexport default getUsersReducer;","map":{"version":3,"sources":["F:/Programming/hammer-app/src/reducers/getUsersReducer.js"],"names":["useState","useEffect","axios","users","setUsers","isLoading","setisLoading","get","then","response","data","console","log","catch","err","getUsersReducer","state","action"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AAEAC,SAAS,CAAC,MAAM;AACdC,EAAAA,KAAK,CACFK,GADH,CAEI,iGAFJ,EAIGC,IAJH,CAISC,QAAD,IAAc;AAClBL,IAAAA,QAAQ,CAACK,QAAQ,CAACC,IAAV,CAAR;AACAJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACD,GARH,EASGG,KATH,CASUC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CATlB;AAUD,CAXQ,EAWN,EAXM,CAAT;AAaAH,OAAO,CAACC,GAAR,CAAY,iBAAiBT,KAA7B;;AAEA,MAAMY,eAAe,GAAG,CAACC,KAAK,GAAGb,KAAT,EAAgBc,MAAhB,KAA2B;AACjD,SAAOD,KAAP;AACD,CAFD;;AAGA,eAAeD,eAAf","sourcesContent":["import {useState, useEffect} from \"react\"\r\nimport axios from \"axios\"\r\n\r\nconst [users, setUsers] = useState(\"\")\r\nconst [isLoading, setisLoading] = useState(false)\r\n\r\nuseEffect(() => {\r\n  axios\r\n    .get(\r\n      \"https://cors-anywhere.herokuapp.com/https://us-central1-hammer-app.cloudfunctions.net/api/users\"\r\n    )\r\n    .then((response) => {\r\n      setUsers(response.data)\r\n      setisLoading(true)\r\n      console.log(response.data)\r\n    })\r\n    .catch((err) => console.log(err))\r\n}, [])\r\n\r\nconsole.log(\"From reducer\" + users)\r\n\r\nconst getUsersReducer = (state = users, action) => {\r\n  return state\r\n}\r\nexport default getUsersReducer\r\n"]},"metadata":{},"sourceType":"module"}